//Write Operation on all Ports then Read Operation From all PORTS in Simple I/O Mode and then apply BSR Mode on PORTC:

module tb_PPI_chip_Work();
reg reset;
reg WR_bar;
reg RD_bar;
reg CS_bar;
reg  [1:0] address;
wire [7:0] PORTA;
wire [7:0] PORTB;
wire [3:0] PORTC_Lower;
wire [3:0] PORTC_Upper;
wire [7:0] Data;

// Register to write on the Data bus:
reg [7:0] Data_reg;

//Registers for the read operation:
reg [7:0] PA_reg;
reg [7:0] PB_reg;
reg [3:0] PCL_reg;
reg [3:0] PCU_reg;

PPI_Chip Test_2 (PORTA,PORTB,PORTC_Lower,PORTC_Upper,Data,WR_bar,RD_bar,CS_bar,reset,address);

assign Data = (Data_reg) ;
assign PORTA = (PA_reg);
assign PORTB = (PB_reg);
assign PORTC_Upper = (PCU_reg);
assign PORTC_Lower = (PCL_reg);


initial
begin
// Disable all Control signals at the beginning:
reset = 1'b0;
RD_bar = 1'b1;
WR_bar = 1'b1;
CS_bar = 1'b1;

//Sending the Write Control word format:
#2 address = 2'b11;
#2 CS_bar = 1'b0;
#2 WR_bar = 1'b0;
#5 Data_reg = 8'b1000_0000;


//Write Byte on PORTA:
#5 address = 2'b00;
#2 PA_reg = 8'bzzzz_zzzz;
#5 Data_reg = 8'b1001_1001;
#5 Data_reg = 8'b0101_0001;




//Write Byte on PORTB:
#5 address = 2'b01;
#2 PB_reg = 8'bzzzz_zzzz;
#5 Data_reg = 8'b1101_1101;
#5 Data_reg = 8'b0001_0101;


//Write Byte on PORTC:
fork
#5 PCL_reg = 4'bzzzz;
#5 PCU_reg = 4'bzzzz;
join

#5 address = 2'b10;
#5 Data_reg = 8'b1111_0000;


 
//Send Read Control Word Format:
#5 address = 2'b11;     //CWR =1001 1011 For Read Operation
#5 Data_reg = 8'b1001_1011;


//Read Operation on the PORTA:
fork
#5 RD_bar = 1'b0;
#5 WR_bar = 1'b1;
join

#7 Data_reg = 8'bzzzz_zzzz;
#5 PA_reg = 8'b1100_1100;
#5 address = 2'b00; 



//Read Operation From PORTB:
#5 Data_reg = 8'bzzzz_zzzz;
#5 PB_reg = 8'b1000_0001;
#5 address = 2'b01;


//Read Operation From PORTC:
#7 Data_reg = 8'bzzzz_zzzz;
#2 PCL_reg = 4'b1111;
#2 PCU_reg = 4'b0000;
#5 address = 2'b10;


//Finally Apply BSR Mode:
//Set the Zero bit of PORTC:
fork                    
#2 WR_bar=1'b0;
#2 RD_bar = 1'b1;
join
#2 address=2'b11;
#5 Data_reg = 8'b0110_0001 ;                     
                    
//Set the First bit of the PORTC:
#5 Data_reg = 8'b0111_0011;

//Reset the Fifth Bit of the PORTC:
#5 Data_reg = 8'b0111_1010;

//#5 reset = 1'b1;                
end

endmodule

